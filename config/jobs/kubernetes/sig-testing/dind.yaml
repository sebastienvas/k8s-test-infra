presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-dind-e2e
    always_run: false
    skip_branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-dind-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=k8s.io/kubernetes=$(PULL_REFS)"
        - "--repo=k8s.io/test-infra=master"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=dindind_execute"
        - "--"
        - "kubetest"
        - "--"
        - "--build=dind"
        - "--deployment=dind"
        - "--ginkgo-focus=\\[Conformance\\]"
        - "--ginkgo-skip=(DNS)|(NodeSelector)"
        - "--up"
        - "--test"
        - "--down"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            # We can adjust this after we know the requirements.
            memory: "6Gi"
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

periodics:
- interval: 6h
  name: ci-kubernetes-dind-conformance
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-dind-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
      args:
      - "--job=$(JOB_NAME)"
      - "--root=/go/src"
      - "--repo=k8s.io/kubernetes=master"
      - "--repo=k8s.io/test-infra=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=dindind_execute"
      - "--"
      - "kubetest"
      - "--"
      - "--build=dind"
      - "--deployment=dind"
      - "--up"
      - "--test"
      - "--ginkgo-focus=\\[Conformance\\]"
      - "--down"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
        capabilities:
          add: ["SYS_ADMIN"]
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
      resources:
        requests:
          # We can adjust this after we know the requirements.
          memory: "6Gi"
    volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
- interval: 1h
  name: ci-kubernetes-kind-conformance-parallel
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-dind-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180829-29e661965-master
      env:
      # run tests in parallel
      - name: "PARALLEL"
        value: "true"
      args:
      - "--job=$(JOB_NAME)"
      - "--root=/go/src"
      - "--repo=k8s.io/kubernetes=master"
      - "--repo=k8s.io/test-infra=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=execute"
      - "--"
      - "./../test-infra/experiment/kind-e2e.sh"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
        capabilities:
          add: ["SYS_ADMIN"]
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
      resources:
        requests:
          # We can adjust this after we know the requirements.
          memory: "6Gi"
    volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory