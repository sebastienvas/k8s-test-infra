{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "version": "v1",
  "baseUrl": "https://testing.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "description": "Allows developers to run automated tests for their mobile applications on Google infrastructure.",
  "servicePath": "",
  "rootUrl": "https://testing.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "testing",
  "batchPath": "batch",
  "documentationLink": "https://developers.google.com/cloud-test-lab/",
  "id": "testing:v1",
  "revision": "20180105",
  "title": "Google Cloud Testing API",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "resources": {
    "testEnvironmentCatalog": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "response": {
            "$ref": "TestEnvironmentCatalog"
          },
          "parameterOrder": [
            "environmentType"
          ],
          "parameters": {
            "projectId": {
              "location": "query",
              "description": "For authorization, the cloud project requesting the TestEnvironmentCatalog.\nOptional",
              "type": "string"
            },
            "environmentType": {
              "required": true,
              "type": "string",
              "location": "path",
              "enum": [
                "ENVIRONMENT_TYPE_UNSPECIFIED",
                "ANDROID",
                "NETWORK_CONFIGURATION"
              ],
              "description": "The type of environment that should be listed.\nRequired"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "flatPath": "v1/testEnvironmentCatalog/{environmentType}",
          "id": "testing.testEnvironmentCatalog.get",
          "path": "v1/testEnvironmentCatalog/{environmentType}",
          "description": "Get the catalog of supported test environments.\n\nMay return any of the following canonical error codes:\n\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the environment type does not exist\n- INTERNAL - if an internal error occurred"
        }
      }
    },
    "projects": {
      "resources": {
        "testMatrices": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "TestMatrix"
              },
              "parameterOrder": [
                "projectId",
                "testMatrixId"
              ],
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "Cloud project that owns the test matrix.",
                  "required": true,
                  "type": "string"
                },
                "testMatrixId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Unique test matrix id which was assigned by the service."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1/projects/{projectId}/testMatrices/{testMatrixId}",
              "id": "testing.projects.testMatrices.get",
              "path": "v1/projects/{projectId}/testMatrices/{testMatrixId}",
              "description": "Check the status of a test matrix.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the Test Matrix does not exist"
            },
            "create": {
              "flatPath": "v1/projects/{projectId}/testMatrices",
              "path": "v1/projects/{projectId}/testMatrices",
              "id": "testing.projects.testMatrices.create",
              "description": "Request to run a matrix of tests according to the given specifications.\nUnsupported environments will be returned in the state UNSUPPORTED.\nMatrices are limited to at most 200 supported executions.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed or if the matrix expands\n                     to more than 200 supported executions",
              "request": {
                "$ref": "TestMatrix"
              },
              "response": {
                "$ref": "TestMatrix"
              },
              "parameterOrder": [
                "projectId"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "projectId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The GCE project under which this job will run."
                },
                "requestId": {
                  "location": "query",
                  "description": "A string id used to detect duplicated requests.\nIds are automatically scoped to a project, so\nusers should ensure the ID is unique per-project.\nA UUID is recommended.\n\nOptional, but strongly recommended.",
                  "type": "string"
                }
              }
            },
            "cancel": {
              "httpMethod": "POST",
              "response": {
                "$ref": "CancelTestMatrixResponse"
              },
              "parameterOrder": [
                "projectId",
                "testMatrixId"
              ],
              "parameters": {
                "projectId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Cloud project that owns the test."
                },
                "testMatrixId": {
                  "location": "path",
                  "description": "Test matrix that will be canceled.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectId}/testMatrices/{testMatrixId}:cancel",
              "id": "testing.projects.testMatrices.cancel",
              "path": "v1/projects/{projectId}/testMatrices/{testMatrixId}:cancel",
              "description": "Cancels unfinished test executions in a test matrix.\nThis call returns immediately and cancellation proceeds asychronously.\nIf the matrix is already final, this operation will have no effect.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the Test Matrix does not exist"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "pp": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Pretty-print response."
    },
    "bearer_token": {
      "location": "query",
      "description": "OAuth bearer token.",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  },
  "schemas": {
    "DeviceFile": {
      "description": "A single device file description.",
      "type": "object",
      "properties": {
        "obbFile": {
          "$ref": "ObbFile",
          "description": "A reference to an opaque binary blob file"
        }
      },
      "id": "DeviceFile"
    },
    "ClientInfoDetail": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of detailed client information.\nRequired",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "The key of detailed client information.\nRequired"
        }
      },
      "id": "ClientInfoDetail",
      "description": "Key-value pair of detailed information about the client which invoked the\ntest. For example {'Version', '1.0'}, {'Release Track', 'BETA'}"
    },
    "EnvironmentVariable": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for the environment variable"
        },
        "value": {
          "type": "string",
          "description": "Value for the environment variable"
        }
      },
      "id": "EnvironmentVariable",
      "description": "A key-value pair passed as an environment variable to the test"
    },
    "Environment": {
      "type": "object",
      "properties": {
        "androidDevice": {
          "$ref": "AndroidDevice",
          "description": "An Android device which must be used with an Android test."
        }
      },
      "id": "Environment",
      "description": "The environment in which the test is run."
    },
    "GoogleCloudStorage": {
      "type": "object",
      "properties": {
        "gcsPath": {
          "description": "The path to a directory in GCS that will\neventually contain the results for this test.\nThe requesting user must have write access on the bucket in the supplied\npath.\nRequired",
          "type": "string"
        }
      },
      "id": "GoogleCloudStorage",
      "description": "A storage location within Google cloud storage (GCS)."
    },
    "TestExecution": {
      "description": "Specifies a single test to be executed in a single environment.",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "The time this test execution was initially created.\n@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "testDetails": {
          "$ref": "TestDetails",
          "description": "Additional details about the running test.\n@OutputOnly"
        },
        "matrixId": {
          "description": "Id of the containing TestMatrix.\n@OutputOnly",
          "type": "string"
        },
        "environment": {
          "$ref": "Environment",
          "description": "How the host machine(s) are configured.\n@OutputOnly"
        },
        "state": {
          "enum": [
            "TEST_STATE_UNSPECIFIED",
            "VALIDATING",
            "PENDING",
            "RUNNING",
            "FINISHED",
            "ERROR",
            "UNSUPPORTED_ENVIRONMENT",
            "INCOMPATIBLE_ENVIRONMENT",
            "INCOMPATIBLE_ARCHITECTURE",
            "CANCELLED",
            "INVALID"
          ],
          "description": "Indicates the current progress of the test execution (e.g., FINISHED).\n@OutputOnly",
          "type": "string",
          "enumDescriptions": [
            "Do not use.  For proto versioning only.",
            "The execution or matrix is being validated.",
            "The execution or matrix is waiting for resources to become available.",
            "The execution is currently being processed.\n\nCan only be set on an execution.",
            "The execution or matrix has terminated normally.\n\nOn a matrix this means that the matrix level processing completed normally,\nbut individual executions may be in an ERROR state.",
            "The execution or matrix has stopped because it encountered an\ninfrastructure failure.",
            "The execution was not run because it corresponds to a unsupported\nenvironment.\n\nCan only be set on an execution.",
            "The execution was not run because the provided inputs are incompatible with\nthe requested environment.\n\nExample: requested AndroidVersion is lower than APK's minSdkVersion\n\nCan only be set on an execution.",
            "The execution was not run because the provided inputs are incompatible with\nthe requested architecture.\n\nExample: requested device does not support running the native code in\nthe supplied APK\n\nCan only be set on an execution.",
            "The user cancelled the execution.\n\nCan only be set on an execution.",
            "The execution or matrix was not run because the provided inputs are not\nvalid.\n\nExamples: input file is not of the expected type, is malformed/corrupt, or\nwas flagged as malware"
          ]
        },
        "toolResultsStep": {
          "$ref": "ToolResultsStep",
          "description": "Where the results for this execution are written.\n@OutputOnly"
        },
        "testSpecification": {
          "$ref": "TestSpecification",
          "description": "How to run the test.\n@OutputOnly"
        },
        "projectId": {
          "type": "string",
          "description": "The cloud project that owns the test execution.\n@OutputOnly"
        },
        "id": {
          "description": "Unique id set by the backend.\n@OutputOnly",
          "type": "string"
        }
      },
      "id": "TestExecution"
    },
    "RoboDirective": {
      "description": "Directs Robo to interact with a specific UI element if it is encountered\nduring the crawl. Currently, Robo can perform text entry or element click.",
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The android resource name of the target UI element\nFor example,\n   in Java: R.string.foo\n   in xml: @string/foo\nOnly the “foo” part is needed.\nReference doc:\nhttps://developer.android.com/guide/topics/resources/accessing-resources.html\nRequired"
        },
        "inputText": {
          "type": "string",
          "description": "The text that Robo is directed to set. If left empty, the directive will be\ntreated as a CLICK on the element matching the resource_name.\nOptional"
        },
        "actionType": {
          "enum": [
            "ACTION_TYPE_UNSPECIFIED",
            "SINGLE_CLICK",
            "ENTER_TEXT"
          ],
          "description": "The type of action that Robo should perform on the specified element.\nRequired.",
          "type": "string",
          "enumDescriptions": [
            "DO NOT USE. For proto versioning only.",
            "Direct Robo to click on the specified element. No-op if specified element\nis not clickable.",
            "Direct Robo to enter text on the specified element. No-op if specified\nelement is not enabled or does not allow text entry."
          ]
        }
      },
      "id": "RoboDirective"
    },
    "AndroidMatrix": {
      "type": "object",
      "properties": {
        "androidModelIds": {
          "description": "The ids of the set of Android device to be used.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orientations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of orientations to test with.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired"
        },
        "androidVersionIds": {
          "description": "The ids of the set of Android OS version to be used.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locales": {
          "description": "The set of locales the test device will enable for testing.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AndroidMatrix",
      "description": "A set of Android device configuration permutations is defined by the\nthe cross-product of the given axes.  Internally, the given AndroidMatrix\nwill be expanded into a set of AndroidDevices.\n\nOnly supported permutations will be instantiated.  Invalid permutations\n(e.g., incompatible models/versions) are ignored."
    },
    "AndroidModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The human-readable marketing name for this device model.\nExamples: \"Nexus 5\", \"Galaxy S5\"\n@OutputOnly"
        },
        "id": {
          "type": "string",
          "description": "The unique opaque id for this model.\nUse this for invoking the TestExecutionService.\n@OutputOnly"
        },
        "tags": {
          "description": "Tags for this dimension.\nExamples: \"default\", \"preview\", \"deprecated\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "manufacturer": {
          "type": "string",
          "description": "The manufacturer of this device.\n@OutputOnly"
        },
        "brand": {
          "description": "The company that this device is branded with.\nExample: \"Google\", \"Samsung\"\n@OutputOnly",
          "type": "string"
        },
        "screenX": {
          "type": "integer",
          "description": "Screen size in the horizontal (X) dimension measured in pixels.\n@OutputOnly",
          "format": "int32"
        },
        "codename": {
          "description": "The name of the industrial design.\nThis corresponds to android.os.Build.DEVICE\n@OutputOnly",
          "type": "string"
        },
        "screenY": {
          "type": "integer",
          "description": "Screen size in the vertical (Y) dimension measured in pixels.\n@OutputOnly",
          "format": "int32"
        },
        "form": {
          "enum": [
            "DEVICE_FORM_UNSPECIFIED",
            "VIRTUAL",
            "PHYSICAL"
          ],
          "description": "Whether this device is virtual or physical.\n@OutputOnly",
          "type": "string",
          "enumDescriptions": [
            "Do not use.  For proto versioning only.",
            "A software stack that simulates the device",
            "Actual hardware"
          ]
        },
        "screenDensity": {
          "type": "integer",
          "description": "Screen density in DPI.\nThis corresponds to ro.sf.lcd_density\n@OutputOnly",
          "format": "int32"
        },
        "supportedVersionIds": {
          "description": "The set of Android versions this device supports.\n@OutputOnly",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedAbis": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of supported ABIs for this device.\nThis corresponds to either android.os.Build.SUPPORTED_ABIS (for API level\n21 and above) or android.os.Build.CPU_ABI/CPU_ABI2.\nThe most preferred ABI is the first element in the list.\n\nElements are optionally prefixed by \"version_id:\" (where version_id is\nthe id of an AndroidVersion), denoting an ABI that is supported only on\na particular version.\n@OutputOnly"
        }
      },
      "id": "AndroidModel",
      "description": "A description of an Android device tests may be run on."
    },
    "TestSetup": {
      "type": "object",
      "properties": {
        "filesToPush": {
          "description": "List of files to push to the device before starting the test.\n\nOptional",
          "type": "array",
          "items": {
            "$ref": "DeviceFile"
          }
        },
        "networkProfile": {
          "description": "The network traffic profile used for running the test.\nOptional",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables to set for the test (only applicable for\ninstrumentation tests).",
          "type": "array",
          "items": {
            "$ref": "EnvironmentVariable"
          }
        },
        "account": {
          "$ref": "Account",
          "description": "The device will be logged in on this account for the duration of the test.\nOptional"
        },
        "directoriesToPull": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of directories on the device to upload to GCS at the end of the test;\nthey must be absolute paths under /sdcard or /data/local/tmp.\nPath names are restricted to characters a-z A-Z 0-9 _ - . + and /\n\nNote: The paths /sdcard and /data will be made available and treated as\nimplicit path substitutions. E.g. if /sdcard on a particular device does\nnot map to external storage, the system will replace it with the external\nstorage path prefix for that device.\n\nOptional"
        }
      },
      "id": "TestSetup",
      "description": "A description of how to set up the device prior to running the test"
    },
    "TestSpecification": {
      "description": "A description of how to run the test.",
      "type": "object",
      "properties": {
        "disablePerformanceMetrics": {
          "type": "boolean",
          "description": "Disables performance metrics recording; may reduce test latency."
        },
        "disableVideoRecording": {
          "description": "Disables video recording; may reduce test latency.",
          "type": "boolean"
        },
        "testTimeout": {
          "description": "Max time a test execution is allowed to run before it is\nautomatically cancelled.\nOptional, default is 5 min.",
          "format": "google-duration",
          "type": "string"
        },
        "autoGoogleLogin": {
          "type": "boolean",
          "description": "Enables automatic Google account login.\nIf set, the service will automatically generate a Google test account and\nadd it to the device, before executing the test. Note that test accounts\nmight be reused.\nMany applications show their full set of functionalities when an account is\npresent on the device. Logging into the device with these generated\naccounts allows testing more functionalities.\nDefault is false.\nOptional"
        },
        "testSetup": {
          "$ref": "TestSetup",
          "description": "Test setup requirements e.g. files to install, bootstrap scripts\nOptional"
        },
        "androidRoboTest": {
          "$ref": "AndroidRoboTest",
          "description": "An Android robo test."
        },
        "androidTestLoop": {
          "$ref": "AndroidTestLoop",
          "description": "An Android Application with a Test Loop"
        },
        "androidInstrumentationTest": {
          "$ref": "AndroidInstrumentationTest",
          "description": "An Android instrumentation test."
        }
      },
      "id": "TestSpecification"
    },
    "ResultStorage": {
      "description": "Locations where the results of running the test are stored.",
      "type": "object",
      "properties": {
        "toolResultsExecution": {
          "$ref": "ToolResultsExecution",
          "description": "The tool results execution that results are written to.\n@OutputOnly"
        },
        "toolResultsHistory": {
          "$ref": "ToolResultsHistory",
          "description": "The tool results history that contains the tool results execution that\nresults are written to.\n\nOptional, if not provided the service will choose an appropriate value."
        },
        "googleCloudStorage": {
          "$ref": "GoogleCloudStorage",
          "description": "Required."
        }
      },
      "id": "ResultStorage"
    },
    "TestMatrix": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "The cloud project that owns the test matrix.\n@OutputOnly"
        },
        "testSpecification": {
          "$ref": "TestSpecification",
          "description": "How to run the test.\nRequired"
        },
        "clientInfo": {
          "$ref": "ClientInfo",
          "description": "Information about the client which invoked the test.\nOptional"
        },
        "testExecutions": {
          "description": "The list of test executions that the service creates for this matrix.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "TestExecution"
          }
        },
        "timestamp": {
          "description": "The time this test matrix was initially created.\n@OutputOnly",
          "format": "google-datetime",
          "type": "string"
        },
        "environmentMatrix": {
          "$ref": "EnvironmentMatrix",
          "description": "How the host machine(s) are configured.\nRequired"
        },
        "testMatrixId": {
          "description": "Unique id set by the service.\n@OutputOnly",
          "type": "string"
        },
        "resultStorage": {
          "$ref": "ResultStorage",
          "description": "Where the results for the matrix are written.\nRequired"
        },
        "invalidMatrixDetails": {
          "enum": [
            "INVALID_MATRIX_DETAILS_UNSPECIFIED",
            "DETAILS_UNAVAILABLE",
            "MALFORMED_APK",
            "MALFORMED_TEST_APK",
            "NO_MANIFEST",
            "NO_PACKAGE_NAME",
            "TEST_SAME_AS_APP",
            "NO_INSTRUMENTATION",
            "NO_SIGNATURE",
            "INSTRUMENTATION_ORCHESTRATOR_INCOMPATIBLE",
            "NO_TEST_RUNNER_CLASS",
            "NO_LAUNCHER_ACTIVITY",
            "FORBIDDEN_PERMISSIONS",
            "INVALID_ROBO_DIRECTIVES",
            "TEST_LOOP_INTENT_FILTER_NOT_FOUND",
            "SCENARIO_LABEL_NOT_DECLARED",
            "SCENARIO_LABEL_MALFORMED",
            "SCENARIO_NOT_DECLARED",
            "DEVICE_ADMIN_RECEIVER",
            "TEST_ONLY_APK",
            "MALFORMED_IPA"
          ],
          "description": "Describes why the matrix is considered invalid.\nOnly useful for matrices in the INVALID state.\n@OutputOnly",
          "type": "string",
          "enumDescriptions": [
            "Do not use. For proto versioning only.",
            "The matrix is INVALID, but there are no further details available.",
            "The input app APK could not be parsed.",
            "The input test APK could not be parsed.",
            "The AndroidManifest.xml could not be found.",
            "The APK manifest does not declare a package name.",
            "The test package and app package are the same.",
            "The test apk does not declare an instrumentation.",
            "The input app apk does not have a signature.",
            "The test runner class specified by user or in the test APK's manifest file\nis not compatible with Android Test Orchestrator.\nOrchestrator is only compatible with AndroidJUnitRunner version 1.0 or\nhigher.\nOrchestrator can be disabled by using DO_NOT_USE_ORCHESTRATOR\nOrchestratorOption.",
            "The test APK does not contain the test runner class specified by user or in\nthe manifest file.\nThis can be caused by either of the following reasons:\n- the user provided a runner class name that's incorrect, or\n- the test runner isn't built into the test APK (might be in the app APK\ninstead).",
            "A main launcher activity could not be found.",
            "The app declares one or more permissions that are not allowed.",
            "There is a conflict in the provided robo_directives.",
            "There there is no test loop intent filter, or the one that is given is\nnot formatted correctly.",
            "The request contains a scenario label that was not declared in the\nmanifest.",
            "There was an error when parsing a label's value.",
            "The request contains a scenario number that was not declared in the\nmanifest.",
            "Device administrator applications are not allowed.",
            "The APK is marked as \"testOnly\".",
            "The input IPA could not be parsed."
          ]
        },
        "state": {
          "enum": [
            "TEST_STATE_UNSPECIFIED",
            "VALIDATING",
            "PENDING",
            "RUNNING",
            "FINISHED",
            "ERROR",
            "UNSUPPORTED_ENVIRONMENT",
            "INCOMPATIBLE_ENVIRONMENT",
            "INCOMPATIBLE_ARCHITECTURE",
            "CANCELLED",
            "INVALID"
          ],
          "description": "Indicates the current progress of the test matrix (e.g., FINISHED)\n@OutputOnly",
          "type": "string",
          "enumDescriptions": [
            "Do not use.  For proto versioning only.",
            "The execution or matrix is being validated.",
            "The execution or matrix is waiting for resources to become available.",
            "The execution is currently being processed.\n\nCan only be set on an execution.",
            "The execution or matrix has terminated normally.\n\nOn a matrix this means that the matrix level processing completed normally,\nbut individual executions may be in an ERROR state.",
            "The execution or matrix has stopped because it encountered an\ninfrastructure failure.",
            "The execution was not run because it corresponds to a unsupported\nenvironment.\n\nCan only be set on an execution.",
            "The execution was not run because the provided inputs are incompatible with\nthe requested environment.\n\nExample: requested AndroidVersion is lower than APK's minSdkVersion\n\nCan only be set on an execution.",
            "The execution was not run because the provided inputs are incompatible with\nthe requested architecture.\n\nExample: requested device does not support running the native code in\nthe supplied APK\n\nCan only be set on an execution.",
            "The user cancelled the execution.\n\nCan only be set on an execution.",
            "The execution or matrix was not run because the provided inputs are not\nvalid.\n\nExamples: input file is not of the expected type, is malformed/corrupt, or\nwas flagged as malware"
          ]
        }
      },
      "id": "TestMatrix",
      "description": "A group of one or more TestExecutions, built by taking a\nproduct of values over a pre-defined set of axes."
    },
    "AndroidVersion": {
      "description": "A version of the Android OS",
      "type": "object",
      "properties": {
        "versionString": {
          "type": "string",
          "description": "A string representing this version of the Android OS.\nExamples: \"4.3\", \"4.4\"\n@OutputOnly"
        },
        "codeName": {
          "description": "The code name for this Android version.\nExamples: \"JellyBean\", \"KitKat\"\n@OutputOnly",
          "type": "string"
        },
        "apiLevel": {
          "description": "The API level for this Android version.\nExamples: 18, 19\n@OutputOnly",
          "format": "int32",
          "type": "integer"
        },
        "distribution": {
          "$ref": "Distribution",
          "description": "Market share for this version.\n@OutputOnly"
        },
        "releaseDate": {
          "$ref": "Date",
          "description": "The date this Android version became available in the market.\n@OutputOnly"
        },
        "id": {
          "type": "string",
          "description": "An opaque id for this Android version.\nUse this id to invoke the TestExecutionService.\n@OutputOnly"
        },
        "tags": {
          "description": "Tags for this dimension.\nExamples: \"default\", \"preview\", \"deprecated\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AndroidVersion"
    },
    "FileReference": {
      "type": "object",
      "properties": {
        "gcsPath": {
          "description": "A path to a file in Google Cloud Storage.\nExample: gs://build-app-1414623860166/app-debug-unaligned.apk",
          "type": "string"
        }
      },
      "id": "FileReference",
      "description": "A reference to a file, used for user inputs."
    },
    "LauncherActivityIntent": {
      "type": "object",
      "properties": {},
      "id": "LauncherActivityIntent",
      "description": "Specifies an intent that starts the main launcher activity."
    },
    "TestDetails": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "If the TestState is ERROR, then this string will contain human-readable\ndetails about the error.\n@OutputOnly"
        },
        "progressMessages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Human-readable, detailed descriptions of the test's progress.\nFor example: \"Provisioning a device\", \"Starting Test\".\n\nDuring the course of execution new data may be appended\nto the end of progress_messages.\n@OutputOnly"
        }
      },
      "id": "TestDetails",
      "description": "Additional details about the progress of the running test."
    },
    "ToolResultsExecution": {
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The cloud project that owns the tool results execution.\n@OutputOnly",
          "type": "string"
        },
        "historyId": {
          "type": "string",
          "description": "A tool results history ID.\n@OutputOnly"
        },
        "executionId": {
          "type": "string",
          "description": "A tool results execution ID.\n@OutputOnly"
        }
      },
      "id": "ToolResultsExecution",
      "description": "Represents a tool results execution resource.\n\nThis has the results of a TestMatrix."
    },
    "ToolResultsHistory": {
      "description": "Represents a tool results history resource.",
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "description": "The cloud project that owns the tool results history.\nRequired"
        },
        "historyId": {
          "type": "string",
          "description": "A tool results history ID.\nRequired"
        }
      },
      "id": "ToolResultsHistory"
    },
    "AndroidRoboTest": {
      "description": "A test of an android application that explores the application on a virtual\nor physical Android Device, finding culprits and crashes as it goes.",
      "type": "object",
      "properties": {
        "maxDepth": {
          "description": "The max depth of the traversal stack Robo can explore. Needs to be at least\n2 to make Robo explore the app beyond the first activity.\nDefault is 50.\nOptional",
          "format": "int32",
          "type": "integer"
        },
        "appApk": {
          "$ref": "FileReference",
          "description": "The APK for the application under test.\nRequired"
        },
        "appPackageId": {
          "type": "string",
          "description": "The java package for the application under test.\nOptional, default is determined by examining the application's manifest."
        },
        "startingIntents": {
          "description": "The intents used to launch the app for the crawl.\nIf none are provided, then the main launcher activity is launched.\nIf some are provided, then only those provided are launched (the main\nlauncher activity must be provided explicitly).",
          "type": "array",
          "items": {
            "$ref": "RoboStartingIntent"
          }
        },
        "appInitialActivity": {
          "description": "The initial activity that should be used to start the app.\nOptional",
          "type": "string"
        },
        "maxSteps": {
          "description": "The max number of steps Robo can execute.\nDefault is no limit.\nOptional",
          "format": "int32",
          "type": "integer"
        },
        "roboDirectives": {
          "description": "A set of directives Robo should apply during the crawl.\nThis allows users to customize the crawl. For example, the username and\npassword for a test account can be provided.\nOptional",
          "type": "array",
          "items": {
            "$ref": "RoboDirective"
          }
        }
      },
      "id": "AndroidRoboTest"
    },
    "Distribution": {
      "description": "Data about the relative number of devices running a\ngiven configuration of the Android platform.",
      "type": "object",
      "properties": {
        "marketShare": {
          "description": "The estimated fraction (0-1) of the total market with this configuration.\n@OutputOnly",
          "format": "double",
          "type": "number"
        },
        "measurementTime": {
          "type": "string",
          "description": "The time this distribution was measured.\n@OutputOnly",
          "format": "google-datetime"
        }
      },
      "id": "Distribution"
    },
    "Orientation": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id for this orientation.\nExample: \"portrait\"\n@OutputOnly",
          "type": "string"
        },
        "tags": {
          "description": "Tags for this dimension.\nExamples: \"default\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "A human-friendly name for this orientation.\nExample: \"portrait\"\n@OutputOnly",
          "type": "string"
        }
      },
      "id": "Orientation",
      "description": "Screen orientation of the device."
    },
    "AndroidTestLoop": {
      "type": "object",
      "properties": {
        "appApk": {
          "$ref": "FileReference",
          "description": "The APK for the application under test.\nRequired"
        },
        "appPackageId": {
          "type": "string",
          "description": "The java package for the application under test.\nOptional, default is determined by examining the application's manifest."
        },
        "scenarios": {
          "description": "The list of scenarios that should be run during the test.\nOptional, default is all test loops, derived from the application's\nmanifest.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "scenarioLabels": {
          "description": "The list of scenario labels that should be run during the test.\nThe scenario labels should map to labels defined in the application's\nmanifest. For example, player_experience and\ncom.google.test.loops.player_experience add all of the loops labeled in the\nmanifest with the com.google.test.loops.player_experience name to the\nexecution.\nOptional. Scenarios can also be specified in the scenarios field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AndroidTestLoop",
      "description": "A test of an Android Application with a Test Loop.\nThe intent \u003cintent-name\u003e will be implicitly added, since Games is the only\nuser of this api, for the time being."
    },
    "NetworkConfigurationCatalog": {
      "type": "object",
      "properties": {
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "NetworkConfiguration"
          }
        }
      },
      "id": "NetworkConfigurationCatalog"
    },
    "GoogleAuto": {
      "type": "object",
      "properties": {},
      "id": "GoogleAuto",
      "description": "Enables automatic Google account login.\nIf set, the service will automatically generate a Google test account and add\nit to the device, before executing the test. Note that test accounts might be\nreused.\nMany applications show their full set of functionalities when an account is\npresent on the device. Logging into the device with these generated accounts\nallows testing more functionalities."
    },
    "AndroidDeviceCatalog": {
      "description": "The currently supported Android devices.",
      "type": "object",
      "properties": {
        "models": {
          "description": "The set of supported Android device models.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "AndroidModel"
          }
        },
        "versions": {
          "description": "The set of supported Android OS versions.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "AndroidVersion"
          }
        },
        "runtimeConfiguration": {
          "$ref": "AndroidRuntimeConfiguration",
          "description": "The set of supported runtime configurations.\n@OutputOnly"
        }
      },
      "id": "AndroidDeviceCatalog"
    },
    "AndroidDeviceList": {
      "type": "object",
      "properties": {
        "androidDevices": {
          "type": "array",
          "items": {
            "$ref": "AndroidDevice"
          },
          "description": "A list of Android devices\nRequired"
        }
      },
      "id": "AndroidDeviceList",
      "description": "A list of Android device configurations in which the test is to be executed."
    },
    "ClientInfo": {
      "description": "Information about the client which invoked the test.",
      "type": "object",
      "properties": {
        "clientInfoDetails": {
          "description": "The list of detailed information about client.",
          "type": "array",
          "items": {
            "$ref": "ClientInfoDetail"
          }
        },
        "name": {
          "type": "string",
          "description": "Client name, such as gcloud.\nRequired"
        }
      },
      "id": "ClientInfo"
    },
    "EnvironmentMatrix": {
      "description": "The matrix of environments in which the test is to be executed.",
      "type": "object",
      "properties": {
        "androidDeviceList": {
          "$ref": "AndroidDeviceList",
          "description": "A list of Android devices; the test will be run only on the specified\ndevices."
        },
        "androidMatrix": {
          "$ref": "AndroidMatrix",
          "description": "A matrix of Android devices."
        }
      },
      "id": "EnvironmentMatrix"
    },
    "Date": {
      "description": "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. Related types are google.type.TimeOfDay\nand `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "month": {
          "description": "Month of year. Must be from 1 to 12.",
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "type": "integer",
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
          "format": "int32"
        }
      },
      "id": "Date"
    },
    "CancelTestMatrixResponse": {
      "description": "Response containing the current state of the specified test matrix.",
      "type": "object",
      "properties": {
        "testState": {
          "enum": [
            "TEST_STATE_UNSPECIFIED",
            "VALIDATING",
            "PENDING",
            "RUNNING",
            "FINISHED",
            "ERROR",
            "UNSUPPORTED_ENVIRONMENT",
            "INCOMPATIBLE_ENVIRONMENT",
            "INCOMPATIBLE_ARCHITECTURE",
            "CANCELLED",
            "INVALID"
          ],
          "description": "The current rolled-up state of the test matrix.\nIf this state is already final, then the cancelation request will\nhave no effect.",
          "type": "string",
          "enumDescriptions": [
            "Do not use.  For proto versioning only.",
            "The execution or matrix is being validated.",
            "The execution or matrix is waiting for resources to become available.",
            "The execution is currently being processed.\n\nCan only be set on an execution.",
            "The execution or matrix has terminated normally.\n\nOn a matrix this means that the matrix level processing completed normally,\nbut individual executions may be in an ERROR state.",
            "The execution or matrix has stopped because it encountered an\ninfrastructure failure.",
            "The execution was not run because it corresponds to a unsupported\nenvironment.\n\nCan only be set on an execution.",
            "The execution was not run because the provided inputs are incompatible with\nthe requested environment.\n\nExample: requested AndroidVersion is lower than APK's minSdkVersion\n\nCan only be set on an execution.",
            "The execution was not run because the provided inputs are incompatible with\nthe requested architecture.\n\nExample: requested device does not support running the native code in\nthe supplied APK\n\nCan only be set on an execution.",
            "The user cancelled the execution.\n\nCan only be set on an execution.",
            "The execution or matrix was not run because the provided inputs are not\nvalid.\n\nExamples: input file is not of the expected type, is malformed/corrupt, or\nwas flagged as malware"
          ]
        }
      },
      "id": "CancelTestMatrixResponse"
    },
    "RoboStartingIntent": {
      "description": "Message for specifying the start activities to crawl",
      "type": "object",
      "properties": {
        "launcherActivity": {
          "$ref": "LauncherActivityIntent"
        },
        "startActivity": {
          "$ref": "StartActivityIntent"
        }
      },
      "id": "RoboStartingIntent"
    },
    "StartActivityIntent": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI for the action.\nOptional."
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Intent categories to set on the intent.\nOptional."
        },
        "action": {
          "type": "string",
          "description": "Action name.\nRequired for START_ACTIVITY."
        }
      },
      "id": "StartActivityIntent",
      "description": "A starting intent specified by an action, uri, and categories."
    },
    "Account": {
      "type": "object",
      "properties": {
        "googleAuto": {
          "$ref": "GoogleAuto",
          "description": "An automatic google login account"
        }
      },
      "id": "Account",
      "description": "Identifies an account and how to log into it"
    },
    "TestEnvironmentCatalog": {
      "description": "A description of a test environment.",
      "type": "object",
      "properties": {
        "networkConfigurationCatalog": {
          "$ref": "NetworkConfigurationCatalog",
          "description": "Supported network configurations"
        },
        "androidDeviceCatalog": {
          "$ref": "AndroidDeviceCatalog",
          "description": "Android devices suitable for running Android Instrumentation Tests."
        }
      },
      "id": "TestEnvironmentCatalog"
    },
    "Locale": {
      "description": "A location/region designation for language.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "A human-friendly name for this language/locale.\nExample: \"English\"\n@OutputOnly"
        },
        "id": {
          "type": "string",
          "description": "The id for this locale.\nExample: \"en_US\"\n@OutputOnly"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for this dimension.\nExamples: \"default\""
        },
        "region": {
          "description": "A human-friendly string representing the region for this locale.\nExample: \"United States\"\nNot present for every locale.\n@OutputOnly",
          "type": "string"
        }
      },
      "id": "Locale"
    },
    "ObbFile": {
      "type": "object",
      "properties": {
        "obb": {
          "$ref": "FileReference",
          "description": "Opaque Binary Blob (OBB) file(s) to install on the device\nRequired"
        },
        "obbFileName": {
          "type": "string",
          "description": "OBB file name which must conform to the format as specified by\nAndroid\ne.g. [main|patch].0300110.com.example.android.obb\nwhich will be installed into\n  \u003cshared-storage\u003e/Android/obb/\u003cpackage-name\u003e/\non the device\nRequired"
        }
      },
      "id": "ObbFile",
      "description": "An opaque binary blob file to install on the device before the test starts"
    },
    "AndroidRuntimeConfiguration": {
      "description": "Configuration that can be selected at the time a test is run.",
      "type": "object",
      "properties": {
        "orientations": {
          "description": "The set of available orientations.\n@OutputOnly",
          "type": "array",
          "items": {
            "$ref": "Orientation"
          }
        },
        "locales": {
          "type": "array",
          "items": {
            "$ref": "Locale"
          },
          "description": "The set of available locales.\n@OutputOnly"
        }
      },
      "id": "AndroidRuntimeConfiguration"
    },
    "AndroidDevice": {
      "description": "A single Android device.",
      "type": "object",
      "properties": {
        "orientation": {
          "description": "How the device is oriented during the test.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired",
          "type": "string"
        },
        "locale": {
          "description": "The locale the test device used for testing.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired",
          "type": "string"
        },
        "androidModelId": {
          "type": "string",
          "description": "The id of the Android device to be used.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired"
        },
        "androidVersionId": {
          "type": "string",
          "description": "The id of the Android OS version to be used.\nUse the EnvironmentDiscoveryService to get supported options.\nRequired"
        }
      },
      "id": "AndroidDevice"
    },
    "NetworkConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique opaque id for this network traffic configuration\n@OutputOnly",
          "type": "string"
        },
        "upRule": {
          "$ref": "TrafficRule",
          "description": "The emulation rule applying to the upload traffic"
        },
        "downRule": {
          "$ref": "TrafficRule",
          "description": "The emulation rule applying to the download traffic"
        }
      },
      "id": "NetworkConfiguration"
    },
    "ToolResultsStep": {
      "description": "Represents a tool results step resource.\n\nThis has the results of a TestExecution.",
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "A tool results execution ID.\n@OutputOnly"
        },
        "stepId": {
          "description": "A tool results step ID.\n@OutputOnly",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "The cloud project that owns the tool results step.\n@OutputOnly"
        },
        "historyId": {
          "type": "string",
          "description": "A tool results history ID.\n@OutputOnly"
        }
      },
      "id": "ToolResultsStep"
    },
    "TrafficRule": {
      "type": "object",
      "properties": {
        "burst": {
          "description": "Burst size in kbits",
          "format": "float",
          "type": "number"
        },
        "bandwidth": {
          "description": "Bandwidth in kbits/second",
          "format": "float",
          "type": "number"
        },
        "packetDuplicationRatio": {
          "description": "Packet duplication ratio (0.0 - 1.0)",
          "format": "float",
          "type": "number"
        },
        "delay": {
          "type": "string",
          "description": "Packet delay, must be \u003e= 0",
          "format": "google-duration"
        },
        "packetLossRatio": {
          "type": "number",
          "description": "Packet loss ratio (0.0 - 1.0)",
          "format": "float"
        }
      },
      "id": "TrafficRule",
      "description": "Network emulation parameters"
    },
    "AndroidInstrumentationTest": {
      "description": "A test of an Android application that can control an Android component\nindependently of its normal lifecycle.\nAndroid instrumentation tests run an application APK and test APK inside the\nsame process on a virtual or physical AndroidDevice.  They also specify\na test runner class, such as com.google.GoogleTestRunner, which can vary\non the specific instrumentation framework chosen.\n\nSee \u003chttp://developer.android.com/tools/testing/testing_android.html\u003e for\nmore information on types of Android tests.",
      "type": "object",
      "properties": {
        "testApk": {
          "$ref": "FileReference",
          "description": "The APK containing the test code to be executed.\nRequired"
        },
        "testRunnerClass": {
          "type": "string",
          "description": "The InstrumentationTestRunner class.\nOptional, default is determined by examining the application's manifest."
        },
        "testPackageId": {
          "type": "string",
          "description": "The java package for the test to be executed.\nOptional, default is determined by examining the application's manifest."
        },
        "appApk": {
          "$ref": "FileReference",
          "description": "The APK for the application under test.\nRequired"
        },
        "appPackageId": {
          "description": "The java package for the application under test.\nOptional, default is determined by examining the application's manifest.",
          "type": "string"
        },
        "orchestratorOption": {
          "type": "string",
          "enumDescriptions": [
            "This means that the server should choose the mode. And test will be run\nwithout orchestrator.\nUsing orchestrator is highly encouraged because of all the benefits it\noffers. And in the future, all instrumentation tests will be run with\norchestrator by default if preference unspecified.",
            "Run test using orchestrator.\n** Only compatible with AndroidJUnitRunner version 1.0 or higher! **\nRecommended.",
            "Run test without using orchestrator."
          ],
          "enum": [
            "ORCHESTRATOR_OPTION_UNSPECIFIED",
            "USE_ORCHESTRATOR",
            "DO_NOT_USE_ORCHESTRATOR"
          ],
          "description": "The option of whether running each test within its own invocation of\ninstrumentation with Android Test Orchestrator or not.\n** Orchestrator is only compatible with AndroidJUnitRunner version 1.0 or\nhigher! **\nOrchestrator offers the following benefits:\n - No shared state\n - Crashes are isolated\n - Logs are scoped per test\n\nSee\n\u003chttps://developer.android.com/training/testing/junit-runner.html#using-android-test-orchestrator\u003e\nfor more information about Android Test Orchestrator.\n\nOptional, if empty, test will be run without orchestrator."
        },
        "testTargets": {
          "description": "Each target must be fully qualified with the package name or class name,\nin one of these formats:\n - \"package package_name\"\n - \"class package_name.class_name\"\n - \"class package_name.class_name#method_name\"\n\nOptional, if empty, all targets in the module will be run.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AndroidInstrumentationTest"
    }
  }
}
